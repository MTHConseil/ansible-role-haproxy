global
{% if mthconseil_haproxy.global.logs is defined %}
{% for log in mthconseil_haproxy.global.logs %}
	{{ log }}
{% endfor %}
{% else %}
	log /dev/log	local0
	log /dev/log	local1 notice
{% endif %}
{% if mthconseil_haproxy.global.chroot is defined %}
{% if mthconseil_haproxy.global.chroot != '' %}
	chroot {{ mthconseil_haproxy.global.chroot }}
{% endif %}
{% else %}
	chroot /var/lib/haproxy
{% endif %}
{% if mthconseil_haproxy.global.stats is defined %}
{% for stat in mthconseil_haproxy.global.stats %}
	stats {{ stat }}
{% endfor %}
{% else %}
	stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
{% endif %}
	user {{ mthconseil_haproxy.global.user|default('haproxy') }}
	group {{ mthconseil_haproxy.global.group|default('haproxy') }}
{% if mthconseil_haproxy.global.daemon is defined %}
{% if mthconseil_haproxy.global.daemon %}
	daemon
{% endif %}
{% else %}
	daemon
{% endif %}

{% if mthconseil_haproxy.global.ssl is defined %}
{% for line in mthconseil_haproxy.global.ssl %}
	{{ line }}
{% endfor %}
{% else %}
	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	# An alternative list with additional directives can be obtained from
	#  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-sslv3
{% endif %}

{% if mthconseil_haproxy.global.extra is defined %}
{% for extra in mthconseil_haproxy.global.extra %}
	{{ extra }}
{% endfor %}
{% endif %}

defaults
{% if mthconseil_haproxy.defaults.logs is defined %}
{% for log in mthconseil_haproxy.defaults.logs %}
	{{ log }}
{% endfor %}
{% else %}
	log	global
{% endif %}
{% if mthconseil_haproxy.defaults.mode is defined and mthconseil_haproxy.defaults.mode != '' %}
	mode	{{ mthconseil_haproxy.defaults.mode }}
{% else %}
	mode	http
{% endif %}
{% if mthconseil_haproxy.defaults.options is defined %}
{% for option in mthconseil_haproxy.defaults.options %}
	option {{ option }}
{% endfor %}
{% else %}
	option	httplog
	option	dontlognull
{% endif %}
{% if mthconseil_haproxy.defaults.timeouts is defined %}
{% for timeout in mthconseil_haproxy.defaults.timeouts %}
	timeout {{ timeout.key }} {{ timeout.value }}
{% endfor %}
{% else %}
	timeout connect 5000
	timeout client  50000
	timeout server  50000
{% endif %}
{% if mthconseil_haproxy.defaults.errorfiles is defined %}
{% for errorfile in mthconseil_haproxy.defaults.errorfiles %}
	errorfile {{ errorfile }}
{% endfor %}
{% else %}
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http
{% endif %}
{% if mthconseil_haproxy.defaults.extra is defined %}
{% for extra in mthconseil_haproxy.defaults.extra %}
	{{ extra }}
{% endfor %}
{% endif %}

{% if mthconseil_haproxy.stats is defined and mthconseil_haproxy.stats.enable|default(false) %}
listen {{ mthconseil_haproxy.stats.name|default('stats') }}
	stats enable
{% if mthconseil_haproxy.stats.bind is defined %}
	bind {{ mthconseil_haproxy.stats.bind.ip|default('') }}:{{ mthconseil_haproxy.stats.bind.port|default('22002') }}
{% else %}
	bind :22002
{% endif %}
{% if mthconseil_haproxy.stats.mode is defined %}
	mode {{ mthconseil_haproxy.stats.mode }}
{% endif %}
{% if mthconseil_haproxy.stats.uri is defined %}
	stats uri {{ mthconseil_haproxy.stats.uri }}
{% endif %}
{% if mthconseil_haproxy.stats.refresh is defined %}
	stats refresh {{ mthconseil_haproxy.stats.refresh }}
{% endif %}
{% endif %}

{% for frontend in mthconseil_haproxy.frontends %}
frontend {{ frontend.name }}
	bind {{ frontend.bind }}
	default_backend {{ frontend.default_backend }}
{% for extra in frontend.extra|default([]) %}
	{{ extra }}
{% endfor %}
{% if not loop.last %}

{% endif %}
{% endfor %}

{% for backend in mthconseil_haproxy.backends %}
backend {{ backend.name }}
{% if backend.servers is defined %}
{% for server in backend.servers %}
	server {{ server }}
{% endfor %}
{% endif %}
{% for extra in backend.extra|default([]) %}
	{{ extra }}
{% endfor %}
{% if not loop.last %}

{% endif %}
{% endfor %}
